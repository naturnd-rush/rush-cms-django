name: Test


on:
  push:
    branches: [main]
  pull_request:

jobs:
  run:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Prepare cache dir
      run: mkdir -p /tmp/.buildx-cache

    - name: Prepare Env
      run:
        # create env file in pipeline container for compose to pick up.
        # (we can't just tell compose to use the .env-template file instead
        # because it only does variable substitution for .env)
        cp .env-template .env

    - name: Set up Docker Buildx (for caching)
      uses: docker/setup-buildx-action@v3

    - name: Load Docker cache
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Dockerfiles
      run: |

        docker buildx build \
        --file Dockerfile.django \
        --cache-from=type=local,src=/tmp/.buildx-cache \
        --cache-to=type=local,dest=/tmp/.buildx-cache \
        --progress=plain \
        .

        docker buildx build \
        --file Dockerfile.postgres \
        # Probably don't need to cache the DB...
        # --cache-from=type=local,src=/tmp/.buildx-cache \
        # --cache-to=type=local,dest=/tmp/.buildx-cache \
        --progress=plain \
        .

    - name: Run Django Tests
      run: |
        docker compose \
          -f docker-compose.yml \
          -f docker-compose-run-django-tests.yml \
          up --abort-on-container-exit --exit-code-from django

    - name: Run Vite Tests
      run: | 
        docker compose \
          -f docker-compose.yml \
          -f docker-compose-run-vite-tests.yml \
          up --abort-on-container-exit --exit-code-from django

    - name: Save Docker cache
      if: success()
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-buildx-cache

    - name: Cleanup
      if: always()
      run: docker compose down -v
