function f(e){return new Promise(r=>{const t=()=>{const n=document.getElementById(e);if(n)return r(n)};t(),new MutationObserver(t).observe(document.body,{childList:!0,subtree:!0})})}function l(e){const r=document.getElementById(e);if(r===null)throw new Error("Expected DOM element with id '"+e+"' to exist!");return r}function b(e,r,t){t=Math.max(0,Math.min(1,t));const o=s(e),n=s(r);if(!o||!n)throw new Error("Invalid color format");const u=Math.round(o.r+(n.r-o.r)*t),c=Math.round(o.g+(n.g-o.g)*t),a=Math.round(o.b+(n.b-o.b)*t);return d(u,c,a)}function s(e){const r=e.match(/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i);return r?{r:parseInt(r[1],16),g:parseInt(r[2],16),b:parseInt(r[3],16)}:null}function d(e,r,t){return`#${[e,r,t].map(o=>o.toString(16).padStart(2,"0")).join("")}`}function m(e,r){if(e=isNaN(Number(e))?void 0:Number(e),r=isNaN(Number(r))?void 0:Number(r),!(e===void 0&&r===void 0)){if(e===void 0&&r!==void 0)return r;if(r===void 0&&e!==void 0)return e;if(e!==void 0&&r!==void 0)return(e+r)/2}}function i(e){if(Array.isArray(e))return e.map(i);if(e!==null&&typeof e=="object"){const r={};for(const[t,o]of Object.entries(e))r[t]=i(o);return r}else if(typeof e=="string"||typeof e=="boolean"){const r=Number(e);return isNaN(r)?e:r}else return e}export{b,i as c,l as e,m as i,f as w};
