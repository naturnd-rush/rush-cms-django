var m=Object.defineProperty;var v=(s,e,t)=>e in s?m(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var c=(s,e,t)=>v(s,typeof e!="symbol"?e+"":e,t);const i=[];for(let s=0;s<256;++s)i.push((s+256).toString(16).slice(1));function p(s,e=0){return(i[s[e+0]]+i[s[e+1]]+i[s[e+2]]+i[s[e+3]]+"-"+i[s[e+4]]+i[s[e+5]]+"-"+i[s[e+6]]+i[s[e+7]]+"-"+i[s[e+8]]+i[s[e+9]]+"-"+i[s[e+10]]+i[s[e+11]]+i[s[e+12]]+i[s[e+13]]+i[s[e+14]]+i[s[e+15]]).toLowerCase()}let o;const g=new Uint8Array(16);function f(){if(!o){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");o=crypto.getRandomValues.bind(crypto)}return o(g)}const y=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),l={randomUUID:y};function d(s,e,t){var n;if(l.randomUUID&&!s)return l.randomUUID();s=s||{};const r=s.random??((n=s.rng)==null?void 0:n.call(s))??f();if(r.length<16)throw new Error("Random bytes length must be >= 16");return r[6]=r[6]&15|64,r[8]=r[8]&63|128,p(r)}class a{constructor(e,t){c(this,"id");c(this,"selector");this.id=e,this.selector=t}getId(){return this.id}subscribeIfNeeded(e){const t=this.selectAllIncludingSelf(e);for(let r of t)this.subscribe(r)}selectAllIncludingSelf(e){const t=[];e.matches(this.selector)&&t.push(e);for(let r of e.querySelectorAll(this.selector))r instanceof HTMLElement&&t.push(r);return t}}class E extends a{constructor(t,r,n){super(d(),r);c(this,"eventName");c(this,"callback");c(this,"subscribedElements");this.eventName=t,this.callback=n,this.subscribedElements=[]}subscribe(t){t.addEventListener(this.eventName,this.callback),this.subscribedElements.push(t)}unsubscribeAll(){for(let t of this.subscribedElements)t.removeEventListener(this.eventName,this.callback)}}class S extends a{constructor(t,r,n){super(d(),r);c(this,"observerOptions");c(this,"callback");c(this,"observers");this.observerOptions=t,this.callback=n,this.observers=[]}subscribe(t){const r=new MutationObserver(n=>{for(let b of n)this.callback(b)});r.observe(t,this.observerOptions),this.observers.push(r)}unsubscribeAll(){for(let t of this.observers)t.disconnect()}}class w{constructor(e){c(this,"parentElement");c(this,"subscribers");this.parentElement=e,this.subscribers=new Map,this.initElementAddedObserver()}initElementAddedObserver(){const e=n=>{const b=[];for(let u of n)u instanceof HTMLElement&&b.push(u);return b},t=n=>{if(n.type==="childList"){const b=e(n.addedNodes);for(let u of b)for(let h of this.subscribers.values())h.subscribeIfNeeded(u)}};new MutationObserver(n=>{for(const b of n)t(b)}).observe(this.parentElement,{childList:!0,subtree:!0})}subscribeEventListener(e,t,r){const n=new E(e,t,r);return this.registerSubscriber(n),n.getId()}subscribeMutationObserver(e,t,r){const n=new S(e,t,r);return this.registerSubscriber(n),n.getId()}registerSubscriber(e){e.subscribeIfNeeded(this.parentElement),this.subscribers.set(e.getId(),e)}killSubscriber(e){const t=this.subscribers.get(e);return t!==void 0?(t.unsubscribeAll(),this.subscribers.delete(e),!0):!1}}export{w as D};
