# Generated by Django 5.1.7 on 2025-03-16 22:50

import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Initiative',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='MapData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('geojson', 'Geojson'), ('open_green_map', 'Open Green Map'), ('esri_feature_server', 'Esri Feature Server'), ('generic_rest', 'Generic Rest')], max_length=255)),
                ('geojson', models.JSONField(null=True)),
                ('ogm_map_id', models.TextField(null=True)),
                ('feature_url_template', models.TextField(null=True)),
                ('icon_url_template', models.TextField(null=True)),
                ('image_url_template', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalMapData',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('provider', models.CharField(choices=[('geojson', 'Geojson'), ('open_green_map', 'Open Green Map'), ('esri_feature_server', 'Esri Feature Server'), ('generic_rest', 'Generic Rest')], max_length=255)),
                ('geojson', models.JSONField(null=True)),
                ('ogm_map_id', models.TextField(null=True)),
                ('feature_url_template', models.TextField(null=True)),
                ('icon_url_template', models.TextField(null=True)),
                ('image_url_template', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical map data',
                'verbose_name_plural': 'historical map datas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('map_data', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rush.mapdata')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalLayer',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('map_data', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='rush.mapdata')),
            ],
            options={
                'verbose_name': 'historical layer',
                'verbose_name_plural': 'historical layers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SubQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('subtitle', models.TextField()),
                ('content', models.TextField()),
                ('display', models.CharField(choices=[('full_window', 'Full Window'), ('card', 'Card')], max_length=255)),
                ('sub_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rush.subquestion')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('subtitle', models.TextField()),
                ('content', models.TextField()),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rush.layer')),
                ('sub_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rush.subquestion')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSubQuestion',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('title', models.CharField(max_length=255)),
                ('subtitle', models.TextField()),
                ('content', models.TextField()),
                ('display', models.CharField(choices=[('full_window', 'Full Window'), ('card', 'Card')], max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sub_question', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='rush.subquestion')),
            ],
            options={
                'verbose_name': 'historical sub question',
                'verbose_name_plural': 'historical sub questions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalQuestion',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('title', models.CharField(max_length=255)),
                ('subtitle', models.TextField()),
                ('content', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('layer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='rush.layer')),
                ('sub_question', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='rush.subquestion')),
            ],
            options={
                'verbose_name': 'historical question',
                'verbose_name_plural': 'historical questions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
