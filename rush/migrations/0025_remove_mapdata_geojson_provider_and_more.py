# Generated by Django 5.1.7 on 2025-09-18 19:32
# Edited by Samuel Morris on September 18th, 2025 :)

from django.db import migrations, models


def forward_migrate_provider_to_provider_state(apps, schema_editor):
    print("\nStarting MapData provider forward migration to provider_state...")
    MapData = apps.get_model("rush", "MapData")
    for map_data in MapData.objects.all():
        provider = map_data.provider
        print(f"Migrating {map_data} provider field to provider_state...")
        if provider is None:
            map_data.provider_state = "unset"
        else:
            map_data.provider_state = provider
        if provider == "geojson":
            print(f"Migrating {map_data} geojson data from provider to _geojson field")
            map_data._geojson = map_data.geojson_provider.geojson
        map_data.full_clean()
        map_data.save()
    print("Finished MapData provider forward migration to the provider_state!")


def reverse_migrate_provider_state_to_provider(apps, schema_editor):
    print("\nStarting MapData provider_state reverse migration to provider...")
    MapData = apps.get_model("rush", "MapData")
    for map_data in MapData.objects.all():
        provider_state = map_data.provider_state
        print(f"Migrating in reverse <MapData {map_data.id}> provider_state field to provider...")
        map_data.provider = (
            provider_state if provider_state != "unset" else "geojson"
        )  # HACK: Just set anything no set to GeoJson for reverse migration...
        map_data.full_clean()
        map_data.save()
    print("Finished reverse MapData provider_state migration to the provider field!")


class Migration(migrations.Migration):

    dependencies = [
        ("rush", "0024_remove_historicalmapdata_geojson_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="historicalmapdata",
            name="_geojson",
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name="historicalmapdata",
            name="provider_state",
            field=models.CharField(
                choices=[
                    ("unset", "Unset"),
                    ("geojson", "Geojson"),
                    ("open_green_map", "Open Green Map"),
                ],
                default="unset",
                max_length=255,
            ),
        ),
        migrations.RunPython(
            code=forward_migrate_provider_to_provider_state,
            reverse_code=reverse_migrate_provider_state_to_provider,
        ),
        migrations.RemoveField(
            model_name="mapdata",
            name="provider",
        ),
        migrations.RemoveField(
            model_name="mapdata",
            name="geojson_provider",
        ),
        migrations.RemoveField(
            model_name="historicalmapdata",
            name="geojson_provider",
        ),
        migrations.RemoveField(
            model_name="historicalmapdata",
            name="ogm_provider",
        ),
        migrations.RemoveField(
            model_name="mapdata",
            name="ogm_provider",
        ),
        migrations.RemoveField(
            model_name="historicalmapdata",
            name="provider",
        ),
        migrations.AddField(
            model_name="historicalmapdata",
            name="campaign_link",
            field=models.CharField(blank=True, max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name="historicalmapdata",
            name="map_link",
            field=models.CharField(blank=True, max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name="mapdata",
            name="_geojson",
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name="mapdata",
            name="campaign_link",
            field=models.CharField(blank=True, max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name="mapdata",
            name="map_link",
            field=models.CharField(blank=True, max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name="mapdata",
            name="provider_state",
            field=models.CharField(
                choices=[
                    ("unset", "Unset"),
                    ("geojson", "Geojson"),
                    ("open_green_map", "Open Green Map"),
                ],
                default="unset",
                max_length=255,
            ),
        ),
        migrations.DeleteModel(
            name="GeoJsonProvider",
        ),
        migrations.DeleteModel(
            name="OpenGreenMapProvider",
        ),
    ]
