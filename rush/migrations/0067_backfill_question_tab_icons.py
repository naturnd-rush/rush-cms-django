# Generated by Django 5.2.7 on 2025-10-30 16:08

import shutil
from pathlib import Path

from django.conf import settings
from django.db import migrations


def backfill_question_tab_icons(apps, schema_editor):
    """
    Create a default Icon from favicon-32x32.png and backfill all QuestionTab
    records to reference it.
    """
    Icon = apps.get_model("rush", "Icon")
    MimeType = apps.get_model("rush", "MimeType")
    QuestionTab = apps.get_model("rush", "QuestionTab")

    # Get PNG MimeType
    png_mimetype = MimeType.objects.get(human_name="PNG")

    # Check if default icon already exists
    default_icon = Icon.objects.filter(file="icons/favicon-32x32.png").first()

    if not default_icon:
        # Copy favicon from static to media/icons/
        static_favicon = Path(settings.BASE_DIR) / "static" / "favicon-32x32.png"
        media_icons_dir = Path(settings.MEDIA_ROOT) / "icons"
        media_icons_dir.mkdir(parents=True, exist_ok=True)
        destination = media_icons_dir / "favicon-32x32.png"

        # Copy the file if it doesn't exist
        if static_favicon.exists() and not destination.exists():
            shutil.copy2(static_favicon, destination)
            print(f"Copied {static_favicon} to {destination}")

        # Create the Icon instance
        default_icon = Icon.objects.create(
            mime_type=png_mimetype,
            file="icons/favicon-32x32.png",
        )
        print(f"Created default Icon: {default_icon.id}")
    else:
        print(f"Default icon already exists: {default_icon.id}")

    # Update all QuestionTab records that don't have an icon
    tabs_without_icon = QuestionTab.objects.filter(icon__isnull=True)
    count = tabs_without_icon.count()

    if count > 0:
        tabs_without_icon.update(icon=default_icon)
    print(f"Updated {count} QuestionTab record(s) with default icon")


def reverse_backfill(apps, schema_editor):
    """
    Reverse migration: Set all QuestionTab icons back to null and delete the default icon.
    """
    Icon = apps.get_model("rush", "Icon")
    QuestionTab = apps.get_model("rush", "QuestionTab")

    # Get the default icon
    default_icon = Icon.objects.filter(file="icons/favicon-32x32.png").first()

    if default_icon:
        # Set all QuestionTabs using this icon back to null
        QuestionTab.objects.filter(icon=default_icon).update(icon=None)

        # Delete the default icon
        default_icon.delete()
        print("Deleted default icon and cleared QuestionTab references")


class Migration(migrations.Migration):

    dependencies = [
        ("rush", "0066_questiontab_icon"),
    ]

    operations = [
        migrations.RunPython(
            code=backfill_question_tab_icons,
            reverse_code=reverse_backfill,
        ),
    ]
